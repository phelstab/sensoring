name: PyInstaller Build and Release
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Get the version
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Build Empatica with PyInstaller
      run: |
        cd Empatica 
        pyinstaller --clean --onefile Empatica.py
    - name: Build Polar with PyInstaller
      run: |
        cd Polar
        pyinstaller --clean --onefile --add-data "PolarH10.py;." PolarH10app.py
    - name: Build Kinect with PyInstaller
      run: |
        cd Kinect
        pyinstaller --clean --onefile --add-data "pykinect_recorder;pykinect_recorder" --name Kinect main.py
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: apps
        path: |
          Empatica\dist\Empatica.exe
          Polar\dist\PolarH10app.exe
          Kinect\dist\Kinect.exe
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Empatica/dist/Empatica.exe
        asset_name: Empatica-${{ steps.get_version.outputs.VERSION }}.exe
        asset_content_type: application/octet-stream

    - name: Upload Polar Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Polar/dist/PolarH10app.exe
        asset_name: PolarH10app-${{ steps.get_version.outputs.VERSION }}.exe
        asset_content_type: application/octet-stream

    - name: Upload Kinect Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Kinect/dist/Kinect.exe
        asset_name: Kinect-${{ steps.get_version.outputs.VERSION }}.exe
        asset_content_type: application/octet-stream
